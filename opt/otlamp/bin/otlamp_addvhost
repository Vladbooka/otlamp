#!/bin/bash
source /opt/otlamp/bin/otlamp_lib

#Добавить хост для экземпляра
#Генерация пароля(для ssl сертификата)
gen_password(){
    LENGTH="20"
    </dev/urandom tr -dc '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' | head -c$LENGTH; echo ""
}
PASSWORD=`gen_password`
#параметры
INSTANCE=$1
HOST=$2
SERVERNAME=${3,,}

#тип продукта - "по умолчанию"
PRODUCT='default'
#cтрока доменов для domains.php
DOMAINSPHPARR='<?php $OTLAMP_DOMAINS = array( "default" => "'$SERVERNAME'" ';
#массив алиасов
ALIASES=()
#если переменных больше 3 - забиваем в массив ServerAlias
if [[ "$#" -gt "3" ]]; then
    i=1
    aliasid=1
    #проходимся по массиву параметров
    for param in ${@,,}
    do
        #Если параметр больше 3 - записываем
        if [[ "$i" -gt "3" ]]; then
            #echo $param
            DOMAINSPHPARR=$DOMAINSPHPARR', "'$aliasid'" => "'$param'"'
            ALIASES[$i]=$param
            ((aliasid++))
        fi
        ((i++))
    done
fi
DOMAINSPHPARR=$DOMAINSPHPARR'); ?>'
# Проверка полномочий
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root"
    exit 1
fi
#Проверим передан ли код экземпляра
if [  -z "$INSTANCE" ]; then
    {
        echo "No enough parameters received!Instance code expected!Fail.."
        exit 1
    }
fi
#Проверим передан ли код экземпляра
if [  -z "$HOST" ]; then
    {
        echo "No enough parameters received!Host name expected!Fail.."
        exit 1
    }
fi
#Проверим передан ли Server name
if [  -z "$SERVERNAME" ]; then
    {
        echo "No enough parameters received!Server name expected!Fail.."
        exit 1
    }
fi
#проверим, есть ли такая инсталляция
if [ ! -d "/etc/opt/otlamp/"$INSTANCE ]; then
    echo "Installation with name "$INSTANCE" does not exists!"
    exit 1
fi

#проверим нет ли хоста с таким именем
if [ -d "/var/opt/otlamp/"$INSTANCE"/"$HOST ]; then
    echo "Host with name "$HOST" also exists!"
    exit 1
fi

echo 'OTLAMP ADDVHOST STARTED: '`date`
#создаем дирректории для хоста
mkdir -p /var/opt/otlamp/$INSTANCE/$HOST/www/htdocs/
mkdir -p /var/opt/otlamp/$INSTANCE/$HOST/www/data/
mkdir -p /var/opt/otlamp/$INSTANCE/$HOST/www/local/
mkdir -p /var/opt/otlamp/$INSTANCE/$HOST/www/cli/
mkdir -p /var/opt/otlamp/$INSTANCE/$HOST/www/tmp/sess/
mkdir -p /var/opt/otlamp/$INSTANCE/$HOST/.git/
mkdir -p /var/opt/otlamp/$INSTANCE/$HOST/sqldump/


#если используется бигсторадж
# /var/opt/otlamp/w1/cNNNN в момент создания виртуального хоста:

echo "BIG DIR ON"


BIGDIR=/var/opt/otlamp/_storage/
HOST_BACKUP_FOLDER=$BIGDIR"backup/"$INSTANCE/$HOST/

mkdir -p ${BIGDIR}backup/$INSTANCE/$HOST/.git
mkdir -p ${BIGDIR}backup/$INSTANCE/$HOST/sqldump


FSTAB="/etc/fstab"
FSTAB_OPTONS="  none bind 0 0"
echo "" >> $FSTAB
echo "#____"$HOST"_____" >> $FSTAB
echo $HOST_BACKUP_FOLDER"sqldump/       /var/opt/otlamp/"$INSTANCE"/"$HOST"/sqldump/"$FSTAB_OPTONS               >> $FSTAB
echo $HOST_BACKUP_FOLDER".git/          /var/opt/otlamp/"$INSTANCE"/"$HOST"/.git/"$FSTAB_OPTONS                  >> $FSTAB

echo "MOUNT_____"
mount -a



# Создаются тогда же, но не биндятся
mkdir -p ${BIGDIR}static/$INSTANCE/$HOST/
mkdir -p ${BIGDIR}cache/$INSTANCE/$HOST/







#папка для логов хоста
if [ ! -d "/var/log/opt/otlamp/"$INSTANCE"/"$HOST ]; then
    mkdir -p /var/log/opt/otlamp/$INSTANCE/$HOST
    chown -R $INSTANCE:$INSTANCE /var/log/opt/otlamp/$INSTANCE/$HOST
fi
#скопируем скрипт cron
cp -f /opt/otlamp/share/other/cron /var/opt/otlamp/$INSTANCE/$HOST/www/cli/
#скопируем шаблон хоста
cp -f -vR /opt/otlamp/share/other/default-htdocs/* /var/opt/otlamp/$INSTANCE/$HOST/www/htdocs/
#экранируем каталог хоста
HOSTDIR='\/var\/opt\/otlamp\/'$INSTANCE'\/'$HOST'\/www\/htdocs\/'

#экранируем путь к логам хоста
LOGDIR='\/var\/log\/opt\/otlamp\/'$INSTANCE'\/'$HOST'\/'


TEMPLATES_DIR=/tmp/otlamp/templates.$INSTANCE.$HOST

# Временная директория для шаблонов
mkdir -p $TEMPLATES_DIR

#mkdir -p /var/opt/otlamp/v1/$HOST/www/htdocs
#Скопируем папку с шаблонами(в них созданы текстовые подстановки-их будем править)
cp -f -vR /opt/otlamp/share/templates/* $TEMPLATES_DIR/
#переименовываем default шаблон
mv -f $TEMPLATES_DIR/etc/apache2/vhosts/default.conf $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf

#меняем путь к файлам хоста
sed -r -i 's/\{DEFAULTHOSTDIR\}/'${HOSTDIR}'/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf
#меняем путь к логам
sed -r -i 's/\{DEFAULTLOGDIR\}/'${LOGDIR}'/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf
#меняем путь к ext-файлам
sed -r -i 's/\{HOSTNAME\}/'${HOST}'/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf

IP=$(cat "/etc/opt/otlamp/${INSTANCE}/ip")
#=`cat /etc/opt/otlamp/$instance/vhosts/$host/mysqluser`
#{INSTANCEIP}
echo "IP!!!!!!"
echo "${IP}"
echo "___"

PORT_HTTP=$(cat /etc/opt/otlamp/$INSTANCE/port_http)
PORT_HTTPS=$(cat /etc/opt/otlamp/$INSTANCE/port_https)


if [  -z "$PORT_HTTP" ]; then
    {
        echo "HTTP порт не передан, назначен по умолчанию 80"
        PORT_HTTP=80
    }
fi

if [  -z "$PORT_HTTPS" ]; then
    {
        echo "HTTPS порт не передан, назначен по умолчанию 443"
        PORT_HTTPS=443
    }
fi



echo "confih HTTP " $IP":"$PORT_HTTP
echo "confih HTTPS " $IP":"$PORT_HTTPS


sed -r -i 's/\{INSTANCEIP\}/'${IP}'/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf
sed -r -i 's/\{INSTANCEPORTHTTP\}/'${PORT_HTTP}'/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf
sed -r -i 's/\{INSTANCEPORTHTTPS\}/'${PORT_HTTPS}'/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf

#раскомментируем и подставляем ServerName
sed -r -i 's/#ServerName/ServerName/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf
sed -r -i 's/\{SERVERNAME\}/'${SERVERNAME}'/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf

#изменяем подстановку instance
sed -r -i 's/\{INSTANCE\}/'${INSTANCE}'/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf

#Если алиасов > 0 раскомментировать ServerAlias и подставить алиасы
if [[ "${#ALIASES[@]}" -gt "0" ]]; then
    SERVERALIAS=${ALIASES[@]}
    
    sed -r -i 's/#ServerAlias/ServerAlias/g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf
    
    # Подставим алиасы, заменим пробелы промежуточной подстановкой {SPACE}, а затем вернем пробелы(sed не хочет заменять текст с пробелами)
    cat $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf | sed 's/{SERVERALIAS}/'$(echo $SERVERALIAS | sed 's/ /\{SPACE\}/g')'/g' | sed 's/{SPACE}/ /g' > $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.tmp
    cp -f $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.tmp $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf
fi



#пути к файлам сертификата для создания сертификата(в templates dir)
mkdir $TEMPLATES_DIR/ssl
TMPSSLCERTFILE=$TEMPLATES_DIR'/ssl/selfsigned.crt'
TMPSSLKEYFILE=$TEMPLATES_DIR'/ssl/selfsigned.key'
TMPSSLCSRFILE=$TEMPLATES_DIR'/ssl/selfsigned.csr'

#пути к файлам сертификата для помещения в конфиг

SSLCERTFILE=/etc/opt/otlamp/$INSTANCE/vhosts/$HOST/selfsigned.crt
SSLKEYFILE=/etc/opt/otlamp/$INSTANCE/vhosts/$HOST/selfsigned.key
SSLCSRFILE=/etc/opt/otlamp/$INSTANCE/vhosts/$HOST/selfsigned.csr
#генерация ключа
openssl genrsa -des3 -passout pass:$PASSWORD -out $TMPSSLKEYFILE 2048

#удаление пароля из ключа
openssl rsa -passin pass:$PASSWORD -in $TMPSSLKEYFILE -out $TMPSSLKEYFILE.insecure
mv $TMPSSLKEYFILE $TMPSSLKEYFILE.secure
mv $TMPSSLKEYFILE.insecure $TMPSSLKEYFILE

#генерация csr
openssl req -new -passin pass:$PASSWORD -subj "/" -key $TMPSSLKEYFILE -out $TMPSSLCSRFILE
#создание самоподписанного сертификата
openssl x509 -passin pass:$PASSWORD -req -days 1095 -in $TMPSSLCSRFILE -signkey $TMPSSLKEYFILE -out $TMPSSLCERTFILE

rm $TMPSSLCSRFILE
rm $TMPSSLKEYFILE.secure
#меняем путь к ключу
sed -r -i 's%\{SSLKEYFILE\}%'${SSLKEYFILE}'%g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf
#меняем путь к сертификату
sed -r -i 's%\{SSLCERTFILE\}%'${SSLCERTFILE}'%g' $TEMPLATES_DIR/etc/apache2/vhosts/$HOST.conf

#копируем конфиги, сертификат и ключ в папку с otlamp
mkdir -p /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/

#копируем конфиги из папки с шаблонами в папку для экхемпляра OTLAMP
cp -f $TMPSSLCERTFILE $SSLCERTFILE
cp -f $TMPSSLKEYFILE $SSLKEYFILE
cp -f -vR $TEMPLATES_DIR/etc/apache2/vhosts/*.conf /etc/opt/otlamp/$INSTANCE/vhosts/

#Копируем External файлы для virtual hosts
cp -f /opt/otlamp/share/conf.ext/$PRODUCT/vhost.ext /etc/opt/otlamp/$INSTANCE/vhosts/$HOST.vhost.ext
cp -f /opt/otlamp/share/conf.ext/$PRODUCT/dir.ext /etc/opt/otlamp/$INSTANCE/vhosts/$HOST.dir.ext


#подстановка HOSTDIR для ext файлов
sed -r -i 's/\{HOSTDIR\}/'${HOSTDIR}'/g' /etc/opt/otlamp/$INSTANCE/vhosts/$HOST.vhost.ext
sed -r -i 's/\{HOSTDIR\}/'${HOSTDIR}'/g' /etc/opt/otlamp/$INSTANCE/vhosts/$HOST.dir.ext

#удаляем комплект шаблонов
#rm -rf $TEMPLATES_DIR
#touch /var/opt/otlamp/$INSTANCE/$HOST/.gitignore
#echo 'www/data/sessions/' >> /var/opt/otlamp/$INSTANCE/$HOST/.gitignore
#echo 'www/data/temp/' >> /var/opt/otlamp/$INSTANCE/$HOST/.gitignore
#echo 'www/tmp/' >> /var/opt/otlamp/$INSTANCE/$HOST/.gitignore

#меняем права на созданные конфиги
#меняем права на папку с хостом и владельца
chmod 700 /var/opt/otlamp/$INSTANCE/$HOST -R
chown -R $INSTANCE:$INSTANCE /var/opt/otlamp/$INSTANCE/$HOST
#установим права на конфиги
chown root:root /etc/opt/otlamp/$INSTANCE/vhosts/$HOST.*
chmod 644 /etc/opt/otlamp/$INSTANCE/vhosts/$HOST.*

MYSQLUSERNAME=$INSTANCE'_'$HOST

if [[ "${#MYSQLUSERNAME}" > "16" ]]; then
    FIRST10=`echo $MYSQLUSERNAME|cut -c 1-10`
    MD5=`echo $MYSQLUSERNAME|md5sum`
    FIRSTMD5=`echo $MD5|cut -c 1-6`
    MYSQLUSERNAME="$FIRST10""$FIRSTMD5"
fi
#TODO проверка работы mysql и результатов выполнения
MYSQLDBNAME=$INSTANCE'_'$HOST
MYSQLUSERPASS=`gen_password`
mysql -u root -p`cat /etc/opt/otlamp/mysqlrootpass` -e "CREATE DATABASE IF NOT EXISTS $MYSQLDBNAME CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;" > /dev/null 2>&1
mysql -u root -p`cat /etc/opt/otlamp/mysqlrootpass` -e "CREATE USER '$MYSQLUSERNAME'@'localhost' IDENTIFIED WITH mysql_native_password  BY '$MYSQLUSERPASS';" > /dev/null 2>&1
mysql -u root -p`cat /etc/opt/otlamp/mysqlrootpass` -e "GRANT ALL PRIVILEGES ON $MYSQLDBNAME.* TO '$MYSQLUSERNAME'@'localhost';" > /dev/null 2>&1
mysql -u root -p`cat /etc/opt/otlamp/mysqlrootpass` -e "GRANT RELOAD,PROCESS ON *.* TO '$MYSQLUSERNAME'@'localhost';"  > /dev/null 2>&1
mysql -u root -p`cat /etc/opt/otlamp/mysqlrootpass` -e "FLUSH PRIVILEGES;" > /dev/null 2>&1

##echo "CREATE DATABASE IF NOT EXISTS $MYSQLDBNAME CHARACTER SET utf8 COLLATE utf8_unicode_ci;CREATE USER '$MYSQLUSERNAME'@'localhost' IDENTIFIED BY '$MYSQLUSERPASS';GRANT ALL PRIVILEGES ON $MYSQLDBNAME.* TO '$MYSQLUSERNAME'@'localhost' WITH GRANT OPTION;"

#сохранение паролей
touch /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/mysqldb && echo $MYSQLDBNAME > /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/mysqldb
touch /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/mysqluser && echo $MYSQLUSERNAME > /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/mysqluser
touch /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/mysqlpass && echo $MYSQLUSERPASS > /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/mysqlpass
echo $BIGDIR >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/BIGDIR

echo '#!/bin/bash' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql
echo 'MYSQLHOST="'localhost'"' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql
echo 'MYSQLUSER="'$MYSQLUSERNAME'"' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql
echo 'MYSQLDB="'$MYSQLDBNAME'"' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql
echo 'MYSQLPASS="'$MYSQLUSERPASS'"' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql

echo '[main]' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql.ini
echo 'mysqlhost="'localhost'"' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql.ini
echo 'mysqluser="'$MYSQLUSERNAME'"' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql.ini
echo 'mysqldb="'$MYSQLDBNAME'"' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql.ini
echo 'mysqlpass="'$MYSQLUSERPASS'"' >> /var/opt/otlamp/$INSTANCE/$HOST/www/local/mysql.ini



#права на пароли
chown root:root /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/*
chmod 400 /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/*

#копирование mysql.php
cp -f /opt/otlamp/share/other/mysql.php '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/mysql.php'
sed -r -i 's/\{OTLAMP_MYSQL_DB\}/'${MYSQLDBNAME}'/g' '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/mysql.php'
sed -r -i 's/\{OTLAMP_MYSQL_USER\}/'${MYSQLUSERNAME}'/g' '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/mysql.php'
sed -r -i 's/\{OTLAMP_MYSQL_PASS\}/'${MYSQLUSERPASS}'/g' '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/mysql.php'


#поверка устанволен ли РаббитМQ
RABBITMQSTATUS=$(service rabbitmq-server status | grep "Active: active (running)")

if [ ! -z "$RABBITMQSTATUS" ]; then
    {
        #ГЕнерация пароля
        RABBITMQHOST=$INSTANCE'_'$HOST
        RABBITMQUSER=$INSTANCE'_'$HOST
        RABBITMQPASS=`gen_password`
        #TODO проверка результата создания пользователя
        sudo rabbitmqctl add_vhost /$RABBITMQHOST
        # создание пользователя (укажите новые логин и пароль вместо указанных)
        sudo rabbitmqctl add_user $RABBITMQUSER $RABBITMQPASS
        # назначение прав пользователю для хоста
        sudo rabbitmqctl set_permissions -p /$RABBITMQHOST $RABBITMQUSER '.*' '.*' '.*'
        
        touch /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq
        echo '#!/bin/bash' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq
        echo 'RABBITMQHOST="'$RABBITMQHOST'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq
        echo 'RABBITMQUSER="'$RABBITMQUSER'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq
        echo 'RABBITMQPASS="'$RABBITMQPASS'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq
        cp -f /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/rabbitmq'
        
        echo '[main]' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.ini
        echo 'rabbitmqhost="'$RABBITMQHOST'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.ini
        echo 'rabbitmquser="'$RABBITMQUSER'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.ini
        echo 'rabbitmqpass="'$RABBITMQPASS'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.ini
        
        
        touch /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.php
        echo '<?php' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.php
        echo '$OTLAMP_RABBITMQ_HOST = "'$RABBITMQHOST'";' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.php
        echo '$OTLAMP_RABBITMQ_USER = "'$RABBITMQUSER'";' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.php
        echo '$OTLAMP_RABBITMQ_PASS = "'$RABBITMQPASS'";' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.php
        cp -f /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/rabbitmq.php '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/rabbitmq.php'
        
        
        #выставить правильные права на файлы
        
    }
fi


#поверка устанволен ли POSTGRESQL
POSTGRESQLSTATUS=$(service postgresql status | grep "Active: active")

if [ ! -z "$POSTGRESQLSTATUS" ]; then
    {
        #ГЕнерация пароля
        POSTGRESQLDB=$INSTANCE'_'$HOST
        POSTGRESQLUSER=$INSTANCE'_'$HOST
        POSTGRESQLPASS=`gen_password`
        
        sudo -u postgres -i psql -c "CREATE USER $POSTGRESQLUSER WITH PASSWORD '$POSTGRESQLPASS'"
        sudo -u postgres -i psql -c "ALTER USER  $POSTGRESQLUSER PASSWORD '$POSTGRESQLPASS'";
        sudo -u postgres -i psql -c "CREATE DATABASE $POSTGRESQLDB"
        sudo -u postgres -i psql -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQLDB TO $POSTGRESQLUSER"
        
        
        touch /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql
        echo 'POSTGRESQLHOST="'127.0.0.1'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql
        echo 'POSTGRESQLDB="'$POSTGRESQLDB'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql
        echo 'POSTGRESQLUSER="'$POSTGRESQLUSER'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql
        echo 'POSTGRESQLPASS="'$POSTGRESQLPASS'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql
        cp -f /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/postgresql'
        
        touch /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.ini
        echo 'postgresqhost="'127.0.0.1'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.ini
        echo 'postgresqldb="'$POSTGRESQLDB'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.ini
        echo 'postgresqluser="'$POSTGRESQLUSER'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.ini
        echo 'postgresqlpass="'$POSTGRESQLPASS'"' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.ini
        
        
        
        
        touch /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.php
        echo '<?php' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.php
        echo '$OTLAMP_POSTGRESQL_HOST = "'127.0.0.1'";' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.php
        echo '$OTLAMP_POSTGRESQL_DB = "'$POSTGRESQLDB'";' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.php
        echo '$OTLAMP_POSTGRESQL_USER = "'$POSTGRESQLUSER'";' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.php
        echo '$OTLAMP_POSTGRESQL_PASS = "'$POSTGRESQLPASS'";' >> /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.php
        cp -f /etc/opt/otlamp/$INSTANCE/vhosts/$HOST/postgresql.php '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/postgresql.php'
        
        
        #выставить правильные права на файлы
        
    }
fi


#TODO проверка результатов создания БД пользователей и ТД если хоть одна БД и рабит ОК то идем дальше.

#создание domains.php
echo $DOMAINSPHPARR > /var/opt/otlamp/$INSTANCE/$HOST/www/local/domains.php
#создание salt.php

SALTPHPARR='<?php $array = ('
for i in {0..9}
do
    if [[ $i == 0 ]]; then
        SALTPHPARR=$SALTPHPARR'"'$i'" => "'`gen_password`'"'
    else
        SALTPHPARR=$SALTPHPARR', "'$i'" => "'`gen_password`'"'
    fi
    
done
SALTPHPARR=$SALTPHPARR'); ?>'

echo $SALTPHPARR > /var/opt/otlamp/$INSTANCE/$HOST/www/local/salt.php
#права
chown $INSTANCE:$INSTANCE '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/mysql.php'
chmod 400 '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/mysql.php'
chown $INSTANCE:$INSTANCE '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/mysql'
chmod 400 '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/mysql'
chown $INSTANCE:$INSTANCE '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/domains.php'
chmod 400 '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/domains.php'
chown $INSTANCE:$INSTANCE '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/salt.php'
chmod 400 '/var/opt/otlamp/'$INSTANCE'/'$HOST'/www/local/salt.php'

bash /opt/otlamp/bin/otlamp_setvhosttype $INSTANCE $HOST default
/usr/bin/git init /var/opt/otlamp/$INSTANCE/$HOST
git config --global user.email $INSTANCE"@"$HOST
git config --global user.name $INSTANCE" "$HOST

/opt/otlamp/bin/otlamp_regen_selsignssl $INSTANCE $HOST


#Удаление темповой папки.
rm -rvf $TEMPLATES_DIR

#перезапуск otlamp
#/etc/init.d/otlamp.$INSTANCE restart
/opt/otlamp/bin/otlampd stop &

#ждать завершения олько потом стартовать.
otlamp.waitpid $!


/opt/otlamp/bin/otlampd start

#поправим права
bash /opt/otlamp/bin/otlamp_fixmode $INSTANCE $HOST
echo 'OTLAMP ADDVHOST COMPLETED SUCCESEFULLY: '`date`
exit 0
