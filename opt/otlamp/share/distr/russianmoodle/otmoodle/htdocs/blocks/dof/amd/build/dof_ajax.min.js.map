{"version":3,"sources":["../src/dof_ajax.js"],"names":["define","$","config","requestSuccess","responses","requests","exception","i","request","response","length","error","deferred","resolve","data","Error","reject","requestFail","jqXHR","textStatus","call","async","ajaxRequestData","promises","push","index","methodname","args","Deferred","promise","done","fail","JSON","stringify","settings","type","context","dataType","processData","contentType","script","wwwroot","sesskey","ajax","success"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Jquery модуль для работы с вебсервисами электронного деканата\n *\n * @module     dof_ajax\n * @package    block_dof\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/config'], function($, config) {\n\n    /**\n     * Success handler. Called when the ajax call succeeds. Checks each response and\n     * resolves or rejects the deferred from that request.\n     *\n     * @method requestSuccess\n     * @private\n     * @param {Object[]} responses Array of responses containing error, exception and data attributes.\n     */\n    var requestSuccess = function(responses) {\n        // Call each of the success handlers.\n        var requests = this;\n        var exception = null;\n        var i = 0;\n        var request;\n        var response;\n\n        for (i = 0; i < requests.length; i++) {\n            request = requests[i];\n\n            response = responses[i];\n            // We may not have responses for all the requests.\n            if (typeof response !== \"undefined\") {\n                if (response.error === false) {\n                    // Call the done handler if it was provided.\n                    request.deferred.resolve(response.data);\n                } else {\n                    exception = response.exception;\n                    break;\n                }\n            } else {\n                // This is not an expected case.\n                exception = new Error('missing response');\n                break;\n            }\n        }\n        // Something failed, reject the remaining promises.\n        if (exception !== null) {\n            for (; i < requests.length; i++) {\n                request = requests[i];\n                request.deferred.reject(exception);\n            }\n        }\n    };\n\n    /**\n     * Fail handler. Called when the ajax call fails. Rejects all deferreds.\n     *\n     * @method requestFail\n     * @private\n     * @param {jqXHR} jqXHR The ajax object.\n     * @param {string} textStatus The status string.\n     */\n    var requestFail = function(jqXHR, textStatus) {\n        // Reject all the promises.\n        var requests = this;\n\n        var i = 0;\n        for (i = 0; i < requests.length; i++) {\n            var request = requests[i];\n\n            request.deferred.reject(textStatus);\n        }\n    };\n\n    return /** @alias module:block/dof_ajax */ {\n        // Public variables and functions.\n        /**\n         * Make a series of ajax requests and return all the responses.\n         *\n         * @method call\n         * @param {Object[]} Array of requests with each containing methodname and args properties.\n         *                   done and fail callbacks can be set for each element in the array, or the\n         *                   can be attached to the promises returned by this function.\n         * @param {Boolean} async Optional, defaults to true.\n         *                  If false - this function will not return until the promises are resolved.\n         * @return {Promise[]} Array of promises that will be resolved when the ajax call returns.\n         */\n        call: function(requests, async) {\n            var ajaxRequestData = [],\n                i,\n                promises = [];\n\n            if (typeof async === \"undefined\") {\n                async = true;\n            }\n            for (i = 0; i < requests.length; i++) {\n                var request = requests[i];\n                ajaxRequestData.push({\n                    index: i,\n                    methodname: request.methodname,\n                    args: request.args\n                });\n                request.deferred = $.Deferred();\n                promises.push(request.deferred.promise());\n                // Allow setting done and fail handlers as arguments.\n                // This is just a shortcut for the calling code.\n                if (typeof request.done !== \"undefined\") {\n                    request.deferred.done(request.done);\n                }\n                if (typeof request.fail !== \"undefined\") {\n                    request.deferred.fail(request.fail);\n                }\n                request.index = i;\n            }\n\n            ajaxRequestData = JSON.stringify(ajaxRequestData);\n            var settings = {\n                type: 'POST',\n                data: ajaxRequestData,\n                context: requests,\n                dataType: 'json',\n                processData: false,\n                async: async,\n                contentType: \"application/json\"\n            };\n\n            var script = config.wwwroot + '/blocks/dof/lib/service.php?sesskey=' + config.sesskey;\n\n            // Jquery deprecated done and fail with async=false so we need to do this 2 ways.\n            if (async) {\n                $.ajax(script, settings)\n                    .done(requestSuccess)\n                    .fail(requestFail);\n            } else {\n                settings.success = requestSuccess;\n                settings.error = requestFail;\n                $.ajax(script, settings);\n            }\n\n            return promises;\n        }\n    };\n});\n"],"file":"dof_ajax.min.js"}