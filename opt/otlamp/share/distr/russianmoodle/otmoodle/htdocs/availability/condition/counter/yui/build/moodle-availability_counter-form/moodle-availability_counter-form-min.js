YUI.add("moodle-availability_counter-form",function(u,e){M.availability_counter=M.availability_counter||{},M.availability_counter.form=u.Object(M.core_availability.plugin),M.availability_counter.form.grades=null,M.availability_counter.form.initInner=function(e){this.grades=e},M.availability_counter.form.getNode=function(e){var a,t,n,i,l,o,c,r=M.str.availability_counter,m='<div class="availability-group availability-group-counter">';if(0<this.grades.length){for(m+='<div class="availability-table"><table class="table table-striped table-sm table-bordered"><tr><th>'+r.cond_form_th_enable+"</th><th>"+r.cond_form_th_element+"</th><th>"+r.cond_form_th_condition+"</th></tr>",a=0;a<this.grades.length;a++)m+='<tr class="availability-element availability-counter-element"><td><input id="e'+(t=this.grades[a]).id+'" type="checkbox" class="form-check-input" value="'+t.id+'" name="enable"/></td><td>'+t.name+'</td><td><div class="form-group"><label><input type="checkbox" name="min" class="form-check-input"/>'+r.cond_form_option_min+'</label><label><span class="accesshide">'+r.cond_form_label_min+'</span><input type="text" name="minval" class="form-control" title="'+r.cond_form_label_min+'"/></label>%</div><div class="form-group"><label><input type="checkbox" name="max" class="form-check-input"/>'+r.cond_form_option_max+'</label><label><span class="accesshide">'+r.cond_form_label_max+'</span><input type="text" name="maxval" class="form-control" title="'+r.cond_form_label_max+'"/></label>%</div></td></tr>';m+='</table><div class="form-group"><label>'+r.cond_form_label_counter+'</label><input type="text" name="counter" class="form-control"/></div></div>'}else m+='<span class="availability-element-notice">'+r.cond_form_notice_nooneelements+"</span>";if(m+="</div>",n=u.Node.create('<div class="availability-group-wrapper availability-group-counter-wrapper">'+m+"</div>"),e.counter!==undefined&&n.one("input[name=counter]").set("value",e.counter),e.elements!==undefined)for(i=0;i<e.elements.length;i++)e.elements[i].id!==undefined&&null!==(l=n.one("#e"+e.elements[i].id))&&(l.set("checked",!0),o=l.ancestor(".availability-counter-element"),e.elements[i].min!==undefined&&(o.one("input[name=min]").set("checked",!0),o.one("input[name=minval]").set("value",e.elements[i].min)),e.elements[i].max!==undefined&&(o.one("input[name=max]").set("checked",!0),o.one("input[name=maxval]").set("value",e.elements[i].max)));return M.availability_counter.form.addedEvents||(M.availability_counter.form.addedEvents=!0,(c=u.one(".availability-field")).delegate("click",function(){M.core_availability.form.update()},".availability_counter input[type=checkbox]"),c.delegate("valuechange",function(){M.core_availability.form.update()},".availability_counter input[type=text]")),n},M.availability_counter.form.fillValue=function(t,e){var a,n;t.elements=[],a=function(e){var a={};e.one("input[name=enable]").get("checked")&&(a.id=parseInt(e.one("input[name=enable]").get("value"),10),e.one("input[name=min]").get("checked")&&(a.min=parseFloat(e.one("input[name=minval]").get("value"))),e.one("input[name=max]").get("checked")&&(a.max=parseFloat(e.one("input[name=maxval]").get("value"))),t.elements.push(a))},e.all(".availability-element").each(a),n=e.one("input[name=counter]").get("value"),t.counter=n},M.availability_counter.form.fillErrors=function(){}},"@VERSION@",{requires:["base","node","event","moodle-core_availability-form"]});