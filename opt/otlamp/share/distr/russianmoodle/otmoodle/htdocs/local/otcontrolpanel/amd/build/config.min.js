function _typeof(a){"@babel/helpers - typeof";if("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator){_typeof=function(a){return typeof a}}else{_typeof=function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a}}return _typeof(a)}define ("local_otcontrolpanel/config",["jquery","core/ajax","core/notification","core/templates","core/str"],function(a,b,c,d,e){return{__config_structure:{},__configured_views:{},restoreDefaults:function restoreDefaults(){var a=this;b.call([{methodname:"local_otcontrolpanel_restore_default_config",args:[],fail:c.exception,done:function done(){a.init()}}])},saveConfig:function saveConfig(){var a=this,d=a.getYaml();window.console.log(d);b.call([{methodname:"local_otcontrolpanel_save_config",args:{yaml:d},fail:c.exception,done:function done(){a.init()}}])},generateYamlFromConfig:function generateYamlFromConfig(b,c,d){var e=this,f="",g=Array(d+1).join(" ");if(b.hasOwnProperty(c)){var h="";if(/^\+?(0|[1-9]\d*)$/.test(c)){h=g+"- "}else{h=g+c+": "}if(null!==b[c]&&(Array.isArray(b[c])||"object"===_typeof(b[c]))){if(0==b[c].length){f+=h+"{  }\r\n"}else{f+=h+"\r\n";a.each(b[c],function(a){f+=e.generateYamlFromConfig(b[c],a,d+2)})}}else{f+=h+b[c]+"\r\n"}}return f},getYaml:function getYaml(){var b=this,c="";a.each(b.__configured_views,function(d,e){var f=e["view-config"];if(!f.hasOwnProperty("entitycode")){return}var g="";a.each(f.fields,function(c,d){var e="";if(d.hasOwnProperty("relationcode")&&d.hasOwnProperty("fields")){e+="    relationcode: "+d.relationcode+"\r\n";if(0==d.fields.length){e+="    fields: {  }\r\n"}else{e+="    fields: \r\n";a.each(d.fields,function(a,c){e+="      - fieldcode: "+c.fieldcode+"\r\n";e+=b.generateYamlFromConfig(c,"modifiers",8);e+=b.generateYamlFromConfig(c,"template",8);e+=b.generateYamlFromConfig(c,"filterparams",8);if(c.hasOwnProperty("displayname")&&c.displayname){e+="        displayname: "+c.displayname+"\r\n"}})}}else if(d.hasOwnProperty("fieldcode")){e+="    fieldcode: "+d.fieldcode+"\r\n"}e+=b.generateYamlFromConfig(d,"modifiers",4);e+=b.generateYamlFromConfig(d,"template",4);e+=b.generateYamlFromConfig(d,"filterparams",4);if(d.hasOwnProperty("displayname")&&d.displayname){e="    displayname: "+d.displayname+"\r\n"+e}g+=e.replace(/ {4}/,"  - ")});if(""!=g){if(!f.hasOwnProperty("displayname")||!f.displayname){f.displayname=e.entity["entity-displayname"]}c+="- displayname: "+f.displayname+"\r\n";c+="  entitycode: "+f.entitycode+"\r\n";c+=b.generateYamlFromConfig(f,"filterform",2);c+=b.generateYamlFromConfig(f,"filters",2);c+="  fields: \r\n";c+=g}});return c},findRelationInConfig:function findRelationInConfig(b,c){var d=[],e=null;if(b.hasOwnProperty("fields")){d=b.fields}a.each(d,function(a,b){if(b.hasOwnProperty("relationcode")&&b.relationcode==c){e=b}});return e},findFieldInConfig:function findFieldInConfig(b,c,d){var e=this,f=null,g=[];if(d===void 0&&b.hasOwnProperty("fields")){g=b.fields}else{var h=e.findRelationInConfig(b,d);if(h&&null===c){return h}if(h&&h.hasOwnProperty("fields")){g=h.fields}}a.each(g,function(a,b){if(b.hasOwnProperty("fieldcode")&&b.fieldcode==c){f=b}});return f},applyViewChanges:function applyViewChanges(b){var c=this,d=a(".view[data-view-code=\""+b+"\"]"),e=c.getViewByCode(b),f=Object.assign({},e["view-config"]),g=d.find(".view-displayname").val();e["view-displayname"]=g;e["view-config"].displayname=g;if(f.hasOwnProperty("filterform")){e["view-config"].filterform=f.filterform}if(f.hasOwnProperty("filters")){e["view-config"].filters=f.filters}if(f.hasOwnProperty("filterparams")){e["view-config"].filterparams=f.filterparams}var h=e["view-config"].fields=[],i=" > .entity-fields > .field > input[type=\"checkbox\"]:checked";d.find(".entity"+i).each(function(){var b=a(this).parent(".field").first(),d={fieldcode:b.data("field-code")},e=b.find(".field-displayname").val();if(e){d.displayname=e}var g=c.findFieldInConfig(f,d.fieldcode);if(g&&g.hasOwnProperty("modifiers")){d.modifiers=g.modifiers}if(g&&g.hasOwnProperty("template")){d.template=g.template}h.push(d)});d.find(".entity-relation").each(function(){var b=a(this);if(0==b.children("input[type=checkbox]:checked").length){return}var d=[];b.find(".relation-relatedentity"+i).each(function(){var e=a(this).parent(".field").first(),g={fieldcode:e.data("field-code")},h=e.find(".field-displayname").val();if(h){g.displayname=h}var i=c.findFieldInConfig(f,g.fieldcode,b.data("relation-code"));if(i&&i.hasOwnProperty("modifiers")){g.modifiers=i.modifiers}if(i&&i.hasOwnProperty("template")){g.template=i.template}d.push(g)});var e={relationcode:b.data("relation-code"),fields:d},g=c.findFieldInConfig(f,null,e.relationcode);if(g&&g.hasOwnProperty("modifiers")){e.modifiers=g.modifiers}if(g&&g.hasOwnProperty("template")){e.template=g.template}if(g&&g.hasOwnProperty("filterparams")){e.filterparams=g.filterparams}var j=b.find(".relation-displayname").val();if(j){e.displayname=j}h.push(e)});c.saveConfig()},addEditHandlers:function addEditHandlers(b){var c=this;b.find(".save-view-config").click(function(){var b=a("<span>").addClass("spinner-grow").addClass("spinner-grow-sm").attr("status","status").attr("aria-hidden","true");a(this).append(b).attr("disabled","disabled").off("click");var d=a(this).parents(".view").first();c.applyViewChanges(d.data("view-code"))});b.find(".cancel-view-config").click(function(){c.displayViews();a(".otcontrolpanel_config .add-view-section").show();a(".otcontrolpanel_config .edit-view-section").html("").show()})},applyConfig:function applyConfig(b){var c=this;a.each(c.__configured_views,function(c,d){var e=d["view-code"],f=d["view-config"],g=f.entitycode,h=b.find(".view[data-view-code=\""+e+"\"]");if(h.find(".entity").data("entity-code")!=g){return}if(!f.hasOwnProperty("displayname")||!f.displayname){f.displayname=d.entity["entity-displayname"]}h.find(".view-displayname").val(f.displayname);a.each(f.fields,function(b,c){var e=null;a.each(d.entity["entity-fields"],function(a,b){if(b["field-code"]==c.fieldcode){e=b}});if(!c.hasOwnProperty("displayname")||!c.displayname){if(e){c.displayname=e["field-displayname"]}else{c.displayname=c.fieldcode}}if(c.hasOwnProperty("relationcode")){var f=null;a.each(d.entity["entity-relations"],function(a,b){if(b["relation-code"]==c.relationcode){f=b}});var g=".entity-relation[data-relation-code=\""+c.relationcode+"\"]",i=h.find(g);if(!c.hasOwnProperty("displayname")||!c.displayname){if(f){c.displayname=f["relation-relatedentity"]["entity-displayname"]}else{c.displayname=c.relationcode}}i.find(".relation-displayname").val(c.displayname);i.children("input[type=checkbox]").prop("checked",!0);a.each(c.fields,function(b,c){var d=".field[data-field-code=\""+c.fieldcode+"\"] > input[type=\"checkbox\"]";i.find(d).prop("checked",!0);var e=null,g=f["relation-relatedentity"]["entity-fields"];a.each(g,function(a,b){if(b["field-code"]==c.fieldcode){e=b}});if(!c.hasOwnProperty("displayname")||!c.displayname){if(e){c.displayname=e["field-displayname"]}else{c.displayname=c.fieldcode}}var h=".field[data-field-code=\""+c.fieldcode+"\"] > .field-displayname";i.find(h).val(c.displayname)})}else{var j=h.find(".entity > .entity-fields"),k=".field[data-field-code=\""+c.fieldcode+"\"] > input[type=\"checkbox\"]";j.find(k).prop("checked",!0);var l=".field[data-field-code=\""+c.fieldcode+"\"] > .field-displayname";j.find(l).val(c.displayname)}})})},editView:function editView(b){var e=this;a(".otcontrolpanel_config .add-view-section").hide();var f=a(".otcontrolpanel_config .views-section .views li[data-view-code=\""+b+"\"] .spinner");f.removeClass("d-none").addClass("d-inline-block");var g=e.getViewByCode(b);if(!g.hasOwnProperty("entity")){g.entity=e.getEntityByCode(g["view-config"].entitycode)}if(!g["view-config"].hasOwnProperty("displayname")){g["view-config"].displayname=g["view-displayname"]}d.render("local_otcontrolpanel/config-edit-view",{view:g}).then(function(b,c){var f=a(".otcontrolpanel_config .edit-view-section");f.show();d.replaceNodeContents(f,b,c);a(".otcontrolpanel_config .views-section").hide();e.addEditHandlers(f);e.applyConfig(f)}).fail(c.exception).done(function(){f.removeClass("d-inline-block").addClass("d-none")})},getViewByCode:function getViewByCode(b){var c=this,d=null;a.each(c.__configured_views,function(a,c){if(c["view-code"]==b){d=c}});return d},getEntityByCode:function getEntityByCode(b){var c=this,d=null;a.each(c.__config_structure.entities,function(a,c){if(c["entity-code"]==b){d=c}});return d},getNextViewcode:function getNextViewcode(){var b=this,c=0;a.each(b.__configured_views,function(a,b){if(b["view-code"]>c){c=b["view-code"]}});return c+1},displayAddView:function displayAddView(){var b=this;d.render("local_otcontrolpanel/config-add-view",{entities:b.__config_structure.entities}).then(function(c,e){var f=a(".otcontrolpanel_config .add-view-section");d.replaceNodeContents(f,c,e);f.show();f.find("input[type=\"button\"]").click(function(){var a=f.find("select option:selected").val(),c=b.getEntityByCode(a),d=b.getNextViewcode();b.__configured_views.push({"view-code":d,"view-config":{entitycode:c["entity-code"],displayname:c["entity-displayname"],fields:[]},"view-displayname":c["entity-displayname"]});b.displayViews(function(){b.editView(d)})})}).fail(c.exception)},displayViews:function displayViews(b){var e=this;a.each(e.__configured_views,function(a,b){b["fields-count"]=b["view-config"].fields.length});window.console.log(e.__configured_views);d.render("local_otcontrolpanel/config-views-list",{views:e.__configured_views}).then(function(c,f){var g=a(".otcontrolpanel_config .views-section");g.show();d.replaceNodeContents(g,c,f);g.find(".views > li").filter(function(){return 1!=a(this).data("view-edit-disabled")}).click(function(){e.editView(a(this).data("view-code"))});g.find(".restore-default-config").click(function(){var b=a("<span>").addClass("spinner-grow").addClass("spinner-grow-sm").attr("status","status").attr("aria-hidden","true");a(this).append(b).attr("disabled","disabled").off("click");e.restoreDefaults()});if(b&&"[object Function]"==={}.toString.call(b)){b()}}).fail(c.exception)},init:function init(){var d=this;a(".otcontrolpanel_config .views-section").html("").show();a(".otcontrolpanel_config .add-view-section").html("").show();a(".otcontrolpanel_config .edit-view-section").html("").show();var f=e.get_string("config_is_loading","local_otcontrolpanel");a.when(f).done(function(e){a(".otcontrolpanel_config .views-section").html(e);b.call([{methodname:"local_otcontrolpanel_get_config_data",args:[],fail:c.exception,done:function done(b){var c=a.parseJSON(b);d.__config_structure=c.config_structure;d.__configured_views=c.configured_views;d.displayViews();d.displayAddView()}}])})}}});
//# sourceMappingURL=config.min.js.map
